export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Only POST requests allowed' });
  }

  console.log("üö® –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∞:", JSON.stringify(req.body, null, 2));

  // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  const bookingId = req.body?.bookingId || req.body?.booking?.id;

  console.log("bookingId >>>", bookingId);

  if (!bookingId) {
    return res.status(400).json({ error: 'Missing bookingId' });
  }

  const shopifyDomain = "https://fujijapan.myshopify.com";
  const accessToken = process.env.SHOPIFY_ACCESS_TOKEN;

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏ –ª–æ–≥–∏—Ä—É–µ–º
    const searchResponse = await fetch(`${shopifyDomain}/admin/api/2023-10/orders.json?status=any&fields=id,note`, {
      headers: {
        "X-Shopify-Access-Token": accessToken,
        "Content-Type": "application/json",
      }
    });

    const data = await searchResponse.json();
    console.log("üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Shopify:", JSON.stringify(data.orders, null, 2));

    // –ò—â–µ–º –∑–∞–∫–∞–∑ –ø–æ note
    const order = data.orders.find(o => o.note && o.note.includes(`Booking ID: ${bookingId}`));

    if (!order) {
      console.warn(`‚ùå –ó–∞–∫–∞–∑ —Å Booking ID: ${bookingId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return res.status(404).json({ error: 'Order not found in Shopify' });
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É
    const cancelResponse = await fetch(`${shopifyDomain}/admin/api/2023-10/orders/${order.id}/cancel.json`, {
      method: 'POST',
      headers: {
        "X-Shopify-Access-Token": accessToken,
        "Content-Type": "application/json",
      }
    });

    if (!cancelResponse.ok) {
      const error = await cancelResponse.json();
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ:", error);
      return res.status(cancelResponse.status).json({ error });
    }

    const result = await cancelResponse.json();
    console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω—ë–Ω:", result);

    return res.status(200).json({ message: 'Order canceled in Shopify', result });

  } catch (error) {
    console.error("üî• –û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", error.message);
    return res.status(500).json({ error: 'Server error', details: error.message });
  }
}
console.log("üîç –ü–æ–∏—Å–∫ –ø–æ note: Booking ID: ", bookingId);